{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Escritorio\\\\ProyectoFinal\\\\mi-proyecto\\\\src\\\\Components\\\\Paginas\\\\Destacados.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Card from \"../Cards/Card\";\nimport './CardSty.css'; // Importa los estilos CSS para las tarjetas\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CardContainer = () => {\n  _s();\n  const [personaje, setPersonaje] = useState([]);\n  useEffect(() => {\n    async function getPersonaje() {\n      try {\n        const response = await fetch(`https://rickandmortyapi.com/api/character`);\n        if (response.ok) {\n          const data = await response.json();\n          setPersonaje(data.results);\n        } else {\n          console.error(`error al cargar personajes`);\n        }\n      } catch (error) {\n        console.error(`Error al cargar personajes`, error);\n      }\n    }\n    getPersonaje();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Personajes Rick and Morty\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), personaje ? personaje.map(p => /*#__PURE__*/_jsxDEV(Card, {\n      character: p,\n      className: \"card\"\n    }, p.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 38\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Cargar personaje...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n_s(CardContainer, \"K5KOYvprGKwbsQXMMCXbtyS0/J8=\");\n_c = CardContainer;\nexport default CardContainer;\nvar _c;\n$RefreshReg$(_c, \"CardContainer\");","map":{"version":3,"names":["React","useState","useEffect","Card","jsxDEV","_jsxDEV","CardContainer","_s","personaje","setPersonaje","getPersonaje","response","fetch","ok","data","json","results","console","error","children","fileName","_jsxFileName","lineNumber","columnNumber","map","p","character","className","id","_c","$RefreshReg$"],"sources":["C:/Users/Administrator/Escritorio/ProyectoFinal/mi-proyecto/src/Components/Paginas/Destacados.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Card from \"../Cards/Card\";\r\nimport './CardSty.css'; // Importa los estilos CSS para las tarjetas\r\n\r\nconst CardContainer = () => {\r\n    const [personaje, setPersonaje] = useState([]);\r\n\r\n    useEffect(() => {\r\n        async function getPersonaje() {\r\n            try {\r\n                const response = await fetch(\r\n                    `https://rickandmortyapi.com/api/character`\r\n                );\r\n                if (response.ok) {\r\n                    const data = await response.json();\r\n                    setPersonaje(data.results);\r\n                } else {\r\n                    console.error(`error al cargar personajes`);\r\n                }\r\n            } catch (error) {\r\n                console.error(`Error al cargar personajes`, error);\r\n            }\r\n        }\r\n        getPersonaje();\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <h2>Personajes Rick and Morty</h2>\r\n            {personaje ? (\r\n                personaje.map((p) => <Card key={p.id} character={p} className=\"card\" />)\r\n            ) : (\r\n                <p>Cargar personaje...</p>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CardContainer;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,IAAI,MAAM,eAAe;AAChC,OAAO,eAAe,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAExB,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE9CC,SAAS,CAAC,MAAM;IACZ,eAAeQ,YAAYA,CAAA,EAAG;MAC1B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CACvB,2CACL,CAAC;QACD,IAAID,QAAQ,CAACE,EAAE,EAAE;UACb,MAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;UAClCN,YAAY,CAACK,IAAI,CAACE,OAAO,CAAC;QAC9B,CAAC,MAAM;UACHC,OAAO,CAACC,KAAK,CAAE,4BAA2B,CAAC;QAC/C;MACJ,CAAC,CAAC,OAAOA,KAAK,EAAE;QACZD,OAAO,CAACC,KAAK,CAAE,4BAA2B,EAAEA,KAAK,CAAC;MACtD;IACJ;IACAR,YAAY,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIL,OAAA;IAAAc,QAAA,gBACId,OAAA;MAAAc,QAAA,EAAI;IAAyB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACjCf,SAAS,GACNA,SAAS,CAACgB,GAAG,CAAEC,CAAC,iBAAKpB,OAAA,CAACF,IAAI;MAAYuB,SAAS,EAAED,CAAE;MAACE,SAAS,EAAC;IAAM,GAApCF,CAAC,CAACG,EAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAkC,CAAC,CAAC,gBAExElB,OAAA;MAAAc,QAAA,EAAG;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAC5B;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAAChB,EAAA,CAhCID,aAAa;AAAAuB,EAAA,GAAbvB,aAAa;AAkCnB,eAAeA,aAAa;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}